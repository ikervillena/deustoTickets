<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="help" name="backend">
	<property environment="env"/>
	<property name="source.dir" location="src"/>
	<property name="build.dir" location="bin"/>
	<property name="dist.dir" location="dist"/>
	<property name="classpath" location="bin"/>
	<property name="server.port" value="1099"/>
	<property name="server.IP" value="127.0.0.1"/>
	<property name="server.NameStaff" value="ServerStaff"/>
	<property name="server.NameUsuario" value="ServerUsuario"/>
	<property name="export.file" value="helloServer.jar"/>
	<property name="policy.file" location="security/java.policy"/>
	<property name="lib.dir" location="lib"/>
	<property name="resources.dir" location="resources"/>
	<property name="bin.dir" location="bin"/>

	<target name="help">
		<echo>Usage: ant [build | export | server]</echo>
	</target>

	<path id="classpath2">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement location="${bin.dir}"/>
		<pathelement location="${resources.dir}"/>
	</path>


	<target name="build" description="Builds the project">
		<delete dir="${build.dir}"/>
		<mkdir dir="${build.dir}"/>
		<path id="lib.path">
			<fileset dir="lib" includes="**/*.jar"/>
		</path>
		<javac srcdir="${source.dir}" destdir="${build.dir}" classpath="${classpath}" deprecation="true" fork="true" includeAntRuntime="no">
			<classpath>
				<path refid="lib.path"/>
			</classpath>
		</javac>
	</target>

	<target name="export" depends="build" description="Export the project into a .jar file">
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<jar destfile="${dist.dir}/${export.file}" basedir="${build.dir}" excludes="**/Server.class"/>
	</target>

	<target name="server" depends="3.create-db-schema" description="Runs the Server for the users">
		<java classname="dataAccess.rmi.server.Server" classpathref="classpath2" fork="true">
			<jvmarg value="-Djava.rmi.server.codebase=file:${build.dir}/"/>
			<jvmarg value="-Djava.security.policy=${policy.file}"/>
			<arg value="${server.IP}"/>
			<arg value="${server.port}"/>
			<arg value="${server.NameStaff}"/>
			<arg value="${server.NameUsuario}"/>
		</java>
	</target>

	<target name="2.enhance-classes" depends="build" description="Adds JDO code to the persisten compiled classes">
		<taskdef name="enhancer" classpathref="classpath2" classname="org.datanucleus.enhancer.EnhancerTask"/>
		<enhancer classpathref="classpath2" failonerror="true">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
			<fileset dir="${bin.dir}">
				<include name="**/*.class"/>
			</fileset>
		</enhancer>
	</target>

	<target name="3.create-db-schema" depends="2.enhance-classes" description="Creates DB Schema on the DB Server">
		<taskdef name="schematool" classpathref="classpath2" classname="org.datanucleus.store.schema.SchemaToolTask"/>
		<schematool mode="create" classpathref="classpath2" props="datanucleus.properties" failonerror="true">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
			<fileset dir="${bin.dir}">
				<include name="**/*.class"/>
			</fileset>
		</schematool>
	</target>

	<target name="4.run-example" description="Runs the example">
		<java classname="org.datanucleus.samples.jdo.tutorial.Main" classpathref="classpath2" fork="true">
			<jvmarg value="-Dlog4j.configuration=log4j.properties"/>
		</java>
	</target>

	<target name="5.delete-db-schema" depends="2.enhance-classes" description="Drops DB sechema from the DB Server">
		<taskdef name="schematool" classpathref="classpath2" classname="org.datanucleus.store.schema.SchemaToolTask"/>
		<schematool mode="delete" classpathref="classpath2" props="datanucleus.properties" failonerror="true">
			<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
			<fileset dir="${bin.dir}">
				<include name="**/*.class"/>
			</fileset>
		</schematool>
	</target>

</project>